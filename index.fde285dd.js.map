{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAC9B,EAAO,SAAS,aAAa,CAAC,SAEpC,SAAS,EAAc,CAAY,CAAE,CAAW,EAC9C,IAAM,EAAU,SAAS,aAAa,CAAC,MAEvC,CAAA,EAAQ,SAAS,CAAG,EACpB,EAAQ,WAAW,CAAG,EACtB,EAAK,WAAW,CAAC,EACnB,CAEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,GACF,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAEA,EACG,IAAI,CAAC,WACJ,EAAc,UAAW,wBAC3B,GACC,KAAK,CAAC,WACL,EAAc,UAAW,wBAC3B,GAEF,EACG,IAAI,CAAC,WACJ,EAAc,UAAW,wBAC3B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAc,wBAAyB,EAAM,OAAO,CACtD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar logo = document.querySelector(\".logo\");\nfunction createMessage(messageClass, messageText) {\n    var message = document.createElement(\"div\");\n    message.className = messageClass;\n    message.textContent = messageText;\n    body.appendChild(message);\n}\nvar promise1 = new Promise(function(resolve) {\n    logo.addEventListener(\"click\", function() {\n        resolve();\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\npromise1.then(function() {\n    createMessage(\"message\", \"Promise was resolved!\");\n}).catch(function() {\n    createMessage(\"message\", \"Promise was rejected!\");\n});\npromise2.then(function() {\n    createMessage(\"message\", \"Promise was resolved!\");\n}).catch(function(error) {\n    createMessage(\"message error-message\", error.message);\n});\n\n//# sourceMappingURL=index.fde285dd.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst logo = document.querySelector('.logo');\n\nfunction createMessage(messageClass, messageText) {\n  const message = document.createElement('div');\n\n  message.className = messageClass;\n  message.textContent = messageText;\n  body.appendChild(message);\n}\n\nconst promise1 = new Promise((resolve) => {\n  logo.addEventListener('click', () => {\n    resolve();\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\npromise1\n  .then(() => {\n    createMessage('message', 'Promise was resolved!');\n  })\n  .catch(() => {\n    createMessage('message', 'Promise was rejected!');\n  });\n\npromise2\n  .then(() => {\n    createMessage('message', 'Promise was resolved!');\n  })\n  .catch((error) => {\n    createMessage('message error-message', error.message);\n  });\n"],"names":["body","document","querySelector","logo","createMessage","messageClass","messageText","message","createElement","className","textContent","appendChild","promise1","Promise","resolve","addEventListener","promise2","reject","setTimeout","Error","then","catch","error"],"version":3,"file":"index.fde285dd.js.map"}